{"ast":null,"code":"var _jsxFileName = \"/media/dench/Files/work/JS/cost_diary/fron-end/src/components/Expenses/Expenses.js\",\n  _s = $RefreshSig$();\nimport \"./Expenses.css\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { useState } from \"react\";\nimport expenseDate from \"./ExpenseDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Expenses(props) {\n  _s();\n  const [filteredYear, setFilteredYear] = useState('2020');\n  const filterChangeHandler = value => {\n    setFilteredYear(value);\n  };\n  const filteredExpenses = props.items.filter(expense => expense.date.getFullYear().toString() === filteredYear);\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), filteredExpenses.length === 0 && expensesContent, filteredExpenses.length > 0 && filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: expense.title,\n        amount: expense.amount,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_s(Expenses, \"d6AxVjxjRbYO2YFEia8LjUybrDc=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["ExpenseItem","Card","ExpensesFilter","useState","expenseDate","jsxDEV","_jsxDEV","Expenses","props","_s","filteredYear","setFilteredYear","filterChangeHandler","value","filteredExpenses","items","filter","expense","date","getFullYear","toString","expensesContent","children","fileName","_jsxFileName","lineNumber","columnNumber","className","selected","onChangeFilter","length","map","title","amount","id","_c","$RefreshReg$"],"sources":["/media/dench/Files/work/JS/cost_diary/fron-end/src/components/Expenses/Expenses.js"],"sourcesContent":["import \"./Expenses.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport {useState} from \"react\";\r\nimport expenseDate from \"./ExpenseDate\";\r\n\r\nfunction Expenses(props) {\r\n    const [filteredYear, setFilteredYear] = useState('2020');\r\n    const filterChangeHandler = (value) => {\r\n        setFilteredYear(value);\r\n    }\r\n\r\n    const filteredExpenses = props.items.filter(expense => expense.date.getFullYear().toString() === filteredYear);\r\n\r\n    let expensesContent = <p>No expenses found.</p>;\r\n    return (\r\n        <div>\r\n            <Card className=\"expenses\">\r\n                <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler}/>\r\n                {filteredExpenses.length === 0 && expensesContent}\r\n                {filteredExpenses.length > 0 && filteredExpenses.map((expense) =>\r\n                    <ExpenseItem\r\n                        key={expense.id}\r\n                        title={expense.title}\r\n                        amount={expense.amount}\r\n                        date={expense.date}></ExpenseItem>)}\r\n            </Card>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Expenses;"],"mappings":";;AAAA,OAAO,gBAAgB;AACvB,OAAOA,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAAQC,QAAQ,QAAO,OAAO;AAC9B,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACrB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,MAAM,CAAC;EACxD,MAAMS,mBAAmB,GAAIC,KAAK,IAAK;IACnCF,eAAe,CAACE,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMC,gBAAgB,GAAGN,KAAK,CAACO,KAAK,CAACC,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKV,YAAY,CAAC;EAE9G,IAAIW,eAAe,gBAAGf,OAAA;IAAAgB,QAAA,EAAG;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAC/C,oBACIpB,OAAA;IAAAgB,QAAA,eACIhB,OAAA,CAACL,IAAI;MAAC0B,SAAS,EAAC,UAAU;MAAAL,QAAA,gBACtBhB,OAAA,CAACJ,cAAc;QAAC0B,QAAQ,EAAElB,YAAa;QAACmB,cAAc,EAAEjB;MAAoB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EAC7EZ,gBAAgB,CAACgB,MAAM,KAAK,CAAC,IAAIT,eAAe,EAChDP,gBAAgB,CAACgB,MAAM,GAAG,CAAC,IAAIhB,gBAAgB,CAACiB,GAAG,CAAEd,OAAO,iBACzDX,OAAA,CAACN,WAAW;QAERgC,KAAK,EAAEf,OAAO,CAACe,KAAM;QACrBC,MAAM,EAAEhB,OAAO,CAACgB,MAAO;QACvBf,IAAI,EAAED,OAAO,CAACC;MAAK,GAHdD,OAAO,CAACiB,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGkB,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAGd;AAACjB,EAAA,CAxBQF,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AA0BjB,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}