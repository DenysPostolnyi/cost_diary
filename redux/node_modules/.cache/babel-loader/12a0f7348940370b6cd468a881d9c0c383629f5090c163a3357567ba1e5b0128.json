{"ast":null,"code":"import { createStore } from 'redux';\nimport { configureStore, createSlice } from \"@reduxjs/toolkit\";\nimport counter from \"../components/Counter\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  // initialState: initialState\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter += action.amount;\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\ncounterSlice.actions.toggle;\n\n// const counterReducer = (state = initialState, action) => {\n//     if (action.type === 'increment') {\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter\n//         };\n//     }\n//     if (action.type === 'decrement') {\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         };\n//     }\n//     if (action.type === 'increase') {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter\n//         };\n//     }\n//     if (action.type === 'toggle') {\n//         return {\n//             showCounter: !state.showCounter,\n//             counter: state.counter\n//         }\n//     }\n//     return state;\n// };\n//\nconst store = configureStore({\n  // reducer: {counter: counterSlice.reducer}\n  reducer: counterSlice.reducer\n});\n// const store = createStore(counterReducer);\n//\nexport default store;","map":{"version":3,"names":["createStore","configureStore","createSlice","counter","initialState","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","amount","toggle","actions","store","reducer"],"sources":["D:/work/JS/cost_diary/redux/src/store/index.js"],"sourcesContent":["import {createStore} from 'redux';\r\nimport {configureStore, createSlice} from \"@reduxjs/toolkit\";\r\nimport counter from \"../components/Counter\";\r\n\r\nconst initialState = {counter: 0, showCounter: true};\r\n\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    // initialState: initialState\r\n    initialState,\r\n    reducers: {\r\n        increment(state){\r\n            state.counter++;\r\n        },\r\n        decrement(state){\r\n            state.counter--;\r\n        },\r\n        increase(state, action){\r\n            state.counter += action.amount;\r\n        },\r\n        toggle(state){\r\n            state.showCounter = !state.showCounter\r\n        }\r\n    }\r\n});\r\n\r\ncounterSlice.actions.toggle\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//     if (action.type === 'increment') {\r\n//         return {\r\n//             counter: state.counter + 1,\r\n//             showCounter: state.showCounter\r\n//         };\r\n//     }\r\n//     if (action.type === 'decrement') {\r\n//         return {\r\n//             counter: state.counter - 1,\r\n//             showCounter: state.showCounter\r\n//         };\r\n//     }\r\n//     if (action.type === 'increase') {\r\n//         return {\r\n//             counter: state.counter + action.amount,\r\n//             showCounter: state.showCounter\r\n//         };\r\n//     }\r\n//     if (action.type === 'toggle') {\r\n//         return {\r\n//             showCounter: !state.showCounter,\r\n//             counter: state.counter\r\n//         }\r\n//     }\r\n//     return state;\r\n// };\r\n//\r\nconst store = configureStore({\r\n    // reducer: {counter: counterSlice.reducer}\r\n    reducer: counterSlice.reducer\r\n});\r\n// const store = createStore(counterReducer);\r\n//\r\nexport default store;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,OAAO;AACjC,SAAQC,cAAc,EAAEC,WAAW,QAAO,kBAAkB;AAC5D,OAAOC,OAAO,MAAM,uBAAuB;AAE3C,MAAMC,YAAY,GAAG;EAACD,OAAO,EAAE,CAAC;EAAEE,WAAW,EAAE;AAAI,CAAC;AAEpD,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,SAAS;EACf;EACAH,YAAY;EACZI,QAAQ,EAAE;IACNC,SAASA,CAACC,KAAK,EAAC;MACZA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDQ,SAASA,CAACD,KAAK,EAAC;MACZA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDS,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAC;MACnBH,KAAK,CAACP,OAAO,IAAIU,MAAM,CAACC,MAAM;IAClC,CAAC;IACDC,MAAMA,CAACL,KAAK,EAAC;MACTA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IAC1C;EACJ;AACJ,CAAC,CAAC;AAEFC,YAAY,CAACU,OAAO,CAACD,MAAM;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,KAAK,GAAGhB,cAAc,CAAC;EACzB;EACAiB,OAAO,EAAEZ,YAAY,CAACY;AAC1B,CAAC,CAAC;AACF;AACA;AACA,eAAeD,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}